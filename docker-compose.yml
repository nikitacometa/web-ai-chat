version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:8.0
    container_name: ai_chat_mongodb
    restart: unless-stopped
    ports:
      - "${MONGODB_PORT:-27017}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD:-admin123}
      MONGO_INITDB_DATABASE: ${MONGODB_DB:-ai_chat_db}
    volumes:
      - mongodb_data:/data/db
    networks:
      - ai_chat_network

  # Redis
  redis:
    image: redis:7.2
    container_name: ai_chat_redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - ai_chat_network

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ai_chat_backend
    restart: unless-stopped
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    environment:
      - MONGODB_URL=mongodb://${MONGODB_USERNAME:-admin}:${MONGODB_PASSWORD:-admin123}@mongodb:27017/${MONGODB_DB:-ai_chat_db}?authSource=admin
      - DATABASE_NAME=${MONGODB_DB:-ai_chat_db}
      - REDIS_URL=redis://redis:6379
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend:/app
    networks:
      - ai_chat_network

  # Next.js Web UI (Chat)
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ai_chat_web
    restart: unless-stopped
    ports:
      - "${WEB_PORT:-3000}:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://backend:8000/api/v1}
      - REDIS_URL=redis://redis:6379
    depends_on:
      - backend
    networks:
      - ai_chat_network

  # Landing Page
  landing:
    build:
      context: ./landing-page
      dockerfile: Dockerfile
    container_name: ai_chat_landing
    restart: unless-stopped
    ports:
      - "${LANDING_PORT:-3001}:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-https://api.aisatisfy.me}
    depends_on:
      - backend
    networks:
      - ai_chat_network

volumes:
  mongodb_data:
  redis_data:

networks:
  ai_chat_network:
    driver: bridge 