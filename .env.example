# Generate a random secret: https://generate-secret.vercel.app/32 or `openssl rand -base64 32`
AUTH_SECRET=****

# The following keys below are automatically created and
# added to your environment when you deploy on vercel

# Get your xAI API Key here for chat and image models: https://console.x.ai/
XAI_API_KEY=****

# Instructions to create a Vercel Blob Store here: https://vercel.com/docs/storage/vercel-blob
BLOB_READ_WRITE_TOKEN=****

# Instructions to create a PostgreSQL database here: https://vercel.com/docs/storage/vercel-postgres/quickstart
POSTGRES_URL=****


# Instructions to create a Redis store here:
# https://vercel.com/docs/redis
REDIS_URL=****

# Backend Configuration (.env variables loaded by backend/config.py)

# Supabase Project Details
# Get these from your Supabase project settings
SUPABASE_URL="your_supabase_url_here"
SUPABASE_KEY="your_supabase_anon_key_here"
# SUPABASE_SERVICE_KEY="your_supabase_service_role_key_here" # Optional: If admin actions need service role

# OpenAI API Key (for DALL-E image generation - Feature Group 4)
# Get this from your OpenAI dashboard
OPENAI_API_KEY="your_openai_api_key_here"

# Algorand Node Configuration (for Algorand integration - Feature Group 5)
ALGOD_NODE="https://mainnet-api.algonode.cloud" # Example, use your preferred node
ALGOD_TOKEN="" # API token for your Algod node, if required

# Algorand Hot Wallet (for payouts - Feature Group 5.4)
# IMPORTANT: Securely manage your mnemonic. Do not commit real mnemonics to your repository.
HOT_WALLET_MNEMONIC="your_25_word_mnemonic_phrase_for_payouts_here"

# Admin Functionality
ADMIN_TOKEN="a_very_secret_and_strong_admin_token" # Used for /admin/reset endpoint

# Round Timer Configurations (optional, defaults are in config.py)
# ROUND_INACTIVITY_TIMEOUT_SEC=1200 # Default: 20 minutes
# MAX_ROUND_DURATION_SEC=86400    # Default: 24 hours
# BET_TIME_EXTENSION_SEC=60       # Default: 1 minute

# ---

# Frontend Configuration (.env variables prefixed with NEXT_PUBLIC_ are available client-side)

# URL of the backend API (for lib/api.ts)
# This should be the address where your FastAPI backend is running
NEXT_PUBLIC_API_URL="http://localhost:8000" # Default for local development

# Supabase (Frontend Client)
NEXT_PUBLIC_SUPABASE_URL="YOUR_SUPABASE_URL_HERE"
NEXT_PUBLIC_SUPABASE_ANON_KEY="YOUR_SUPABASE_ANON_KEY_HERE"

# Algorand Network Configuration (for Pera Wallet & Frontend algod client)
# Options: MainNet, TestNet, BetaNet
NEXT_PUBLIC_ALGORAND_NETWORK="TestNet"
NEXT_PUBLIC_ALGORAND_NODE_SERVER="https://testnet-api.algonode.cloud"
NEXT_PUBLIC_ALGORAND_NODE_TOKEN="" # Typically empty for public nodes like AlgoNode
NEXT_PUBLIC_ALGORAND_NODE_PORT="443"

# Game Specific Frontend Configuration
NEXT_PUBLIC_GAME_TREASURY_ADDRESS="YOUR_ALGORAND_GAME_TREASURY_ADDRESS_HERE" # Address where user bets are sent

# Optional: For E2E Tests (if run outside of Playwright's own env var system)
# E2E_ADMIN_TOKEN="your_e2e_test_admin_token"
